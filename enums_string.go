// Code generated by "stringer -type Pixel,Codename,DownloadType -linecomment -output enums_string.go"; DO NOT EDIT.

package pixelimagedl

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Pixel4-0]
	_ = x[Pixel4XL-1]
	_ = x[Pixel4a-2]
	_ = x[Pixel4a5G-3]
	_ = x[Pixel5-4]
	_ = x[Pixel5a-5]
	_ = x[Pixel6-6]
	_ = x[Pixel6Pro-7]
	_ = x[Unknown-8]
}

const _Pixel_name = "Pixel 4Pixel 4 XLPixel 4aPixel 4a 5GPixel 5Pixel 5aPixel 6Pixel 6 Prounknown"

var _Pixel_index = [...]uint8{0, 7, 17, 25, 36, 43, 51, 58, 69, 76}

func (i Pixel) String() string {
	if i >= Pixel(len(_Pixel_index)-1) {
		return "Pixel(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Pixel_name[_Pixel_index[i]:_Pixel_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Flame-0]
	_ = x[Coral-1]
	_ = x[Sunfish-2]
	_ = x[Bramble-3]
	_ = x[Redfin-4]
	_ = x[Barbet-5]
	_ = x[Oriole-6]
	_ = x[Raven-7]
}

const _Codename_name = "flamecoralsunfishbrambleredfinbarbetorioleraven"

var _Codename_index = [...]uint8{0, 5, 10, 17, 24, 30, 36, 42, 47}

func (i Codename) String() string {
	if i >= Codename(len(_Codename_index)-1) {
		return "Codename(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Codename_name[_Codename_index[i]:_Codename_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Factory-0]
	_ = x[OTA-1]
}

const _DownloadType_name = "factoryOTA"

var _DownloadType_index = [...]uint8{0, 7, 10}

func (i DownloadType) String() string {
	if i >= DownloadType(len(_DownloadType_index)-1) {
		return "DownloadType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DownloadType_name[_DownloadType_index[i]:_DownloadType_index[i+1]]
}
